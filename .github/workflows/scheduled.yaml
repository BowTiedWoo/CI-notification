name: Property Testings

on:
  schedule:
    - cron: "0 */4 * * *"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  property-testing:
    name: Property Testing
    runs-on: ubuntu-latest
    env:
      PROPTEST_CASES: 2
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Use Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Run
        run: |
          set -o pipefail
          cargo test --test wasm-generation --test standard | tee output.log
          echo "Extracting relevant section from test output:"
          grep -A 10 "Test failed: assertion \`left == right\` failed" output.log > failure_section.log

      - name: Read Failure Section
        id: read_failure_section
        run: echo "FAILURE_SECTION=$(cat failure_section.log)" >> $GITHUB_ENV

      - name: Create GitHub Issue on Failure
        uses: jayqi/failed-build-issue-action@v1
        if: ${{ failure() }}
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          label-name: "property-testing-failure"
          title-template: "Property testing failure"
          body-template: |
            GitHub Actions workflow [{{workflow}} #{{runNumber}}](https://github.com/{{repo.owner}}/{{repo.repo}}/actions/runs/{{runId}}) failed.
            ```
            ${{ env.FAILURE_SECTION }}
            ```

      - name: Send message to Slack
        uses: slackapi/slack-github-action@37ebaef184d7626c5f204ab8d3baff4262dd30f0 # v1.27.0
        if: ${{ failure() }}
        with:
          channel-id: ${{ secrets.CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Actions workflow <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Property Testing #${{ github.run_number }}> failed."
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
